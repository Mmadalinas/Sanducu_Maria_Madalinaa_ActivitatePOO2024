#include<iostream>

using namespace std;

class Masina {
public:
	int nrRoti;
	string* producatori;
	string marca;
	float pret;
	static int TVA;
	const int anFabricatie;

	Masina() :anFabricatie(2024), nrRoti(4) {
		this->marca = "Dacia";
		this->pret = 5000;
		this->producatori = NULL;
	}
	Masina(int _nrRoti, string marca, float pret, int anFabricatie) :anFabricatie(anFabricatie) {
		this->nrRoti = _nrRoti;
		this->marca = marca;
		this->pret = pret;
		this->producatori = new string[nrRoti];
		for (int i = 0; i < nrRoti; i++) {
			this->producatori[i] = "Michelin";
		}

	}


	void afisare() {
		cout << "Marca:" << this->marca << endl;
		cout << "Nr roti:" << this->nrRoti << ": ";
		if (this->producatori != NULL) {
			for (int i = 0; i < nrRoti; i++) {
				cout << this->producatori[i] << " ,";

			}
		}
		cout << "Pret:" << this->pret << endl;
		cout << "TVA:" << this->TVA << endl;
		cout << "An fabricatie:" << this->anFabricatie << endl;
	}

	float calculeazaPretTotal() {
		return this->pret + (this->pret * (Masina::TVA / 100.0f));
	}

	static void modificaTVA(int noulTVA) {
		if (noulTVA > 0) {
			Masina::TVA = noulTVA;
		}
	}

	static float calculeazaPretTotalVector(int nrMasini, Masina* vector) {
		float pretTotal = 0;
		for (int i = 0; i < nrMasini; i++) {
			pretTotal += vector[i].calculeazaPretTotal();
		}
		return pretTotal;
	}
	string getMarca() {

		return this->marca;
	}

	string* getProducatori() {
		return this->producatori;
	}

	void setMarca(string marca) {
		if (marca.length() > 2) {

		}
		this->marca = marca;
	}
	string getProducator(int index) {
		if (index >= 0 && index < this->nrRoti) {
			return this->producatori[index];
		}
		else
		{
			return "Nu este gasit";
		}

	}
	void setNrRoti(int nrRoti, string* producatori) {
		if (nrRoti > 0) {
			this->nrRoti = nrRoti;
			if (this->producatori != NULL) {
				delete[]this->producatori;
			}
			this->producatori = new string[nrRoti];
			for (int i = 0; i < nrRoti; i++) {
				this->producatori[i] = producatori[i];
			}

		}
	}
	~Masina() {
		if (this->producatori != NULL) {
			delete[]this->producatori;
		}
	}

		Masina(const Masina& m):anFabricatie(m.anFabricatie) {
			this->nrRoti = nrRoti;
			this->marca = marca;
			this->pret = pret;
			this->producatori = new string[nrRoti];
			for (int i = 0; i < nrRoti; i++) {
				this->producatori[i] = producatori[i];
			}

		}



	};


int Masina::TVA = 19;


int main() {
	Masina m;
	cout << m.getMarca() << endl;
	m.setMarca("Audi");
	cout << m.getMarca() << endl;
	m.afisare();
	cout << endl;
	Masina m2(4, "BMW", 1200, 2021);
	m2.afisare();

	cout << endl;
	cout << m2.getProducatori()[1];
	cout << m2.getProducator(1);

	cout << endl;
	m2.setNrRoti(6, new string[6]{"Michelin","Continental","Bridgestone", "Pirelli","MM","RR"});
	cout << m2.getProducator(5);
	cout << endl;
	 
	Masina m4(m2);
	cout << m4.getProducator(2);




	return 0;

}
